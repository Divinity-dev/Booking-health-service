{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, SIGNUP_SUCCESS, SIGNUP_FAIL, LOGOUT } from '../types';\nimport { getToken, createAccount } from '../../APIs/user';\nconst initialState = {\n  token: null,\n  isAuthenticated: false,\n  error: null,\n  success: null\n};\nexport const login = reqBody => async dispatch => {\n  try {\n    const token = await getToken(reqBody);\n    localStorage.setItem('token', token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: token\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('token');\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const signup = reqBody => async dispatch => {\n  try {\n    const success = await createAccount(reqBody);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: success\n    });\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: error\n    });\n  }\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.payload,\n        isAuthenticated: true\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        success: true,\n        message: action.payload\n      };\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        success: false,\n        error: action.payload\n      };\n    case LOGOUT:\n      return {\n        success: true,\n        isAuthenticated: false,\n        token: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","getToken","createAccount","initialState","token","isAuthenticated","error","success","login","reqBody","dispatch","localStorage","setItem","type","payload","message","logout","removeItem","signup","authReducer","state","arguments","length","undefined","action"],"sources":["/home/juhar/Desktop/microverse-projects/Booking-health-service/src/redux/auth/auth.js"],"sourcesContent":["import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGOUT,\n} from '../types';\nimport { getToken, createAccount } from '../../APIs/user';\n\nconst initialState = {\n  token: null,\n  isAuthenticated: false,\n  error: null,\n  success: null,\n};\n\nexport const login = (reqBody) => async (dispatch) => {\n  try {\n    const token = await getToken(reqBody);\n    localStorage.setItem('token', token);\n    dispatch({ type: LOGIN_SUCCESS, payload: token });\n  } catch (error) {\n    dispatch({ type: LOGIN_FAIL, payload: error.message });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem('token');\n  dispatch({ type: LOGOUT });\n};\n\nexport const signup = (reqBody) => async (dispatch) => {\n  try {\n    const success = await createAccount(reqBody);\n    dispatch({ type: SIGNUP_SUCCESS, payload: success });\n  } catch (error) {\n    dispatch({ type: SIGNUP_FAIL, payload: error });\n  }\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state, token: action.payload, isAuthenticated: true };\n    case LOGIN_FAIL:\n      return { ...state, error: action.payload };\n    case SIGNUP_SUCCESS:\n      return { ...state, success: true, message: action.payload };\n    case SIGNUP_FAIL:\n      return { ...state, success: false, error: action.payload };\n    case LOGOUT:\n      return { success: true, isAuthenticated: false, token: null };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,aAAa,EACbC,UAAU,EACVC,cAAc,EACdC,WAAW,EACXC,MAAM,QACD,UAAU;AACjB,SAASC,QAAQ,EAAEC,aAAa,QAAQ,iBAAiB;AAEzD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,KAAK,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMN,KAAK,GAAG,MAAMH,QAAQ,CAACQ,OAAO,CAAC;IACrCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;IACpCM,QAAQ,CAAC;MAAEG,IAAI,EAAEjB,aAAa;MAAEkB,OAAO,EAAEV;IAAM,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdI,QAAQ,CAAC;MAAEG,IAAI,EAAEhB,UAAU;MAAEiB,OAAO,EAAER,KAAK,CAACS;IAAQ,CAAC,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM,MAAON,QAAQ,IAAK;EAC9CC,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAChCP,QAAQ,CAAC;IAAEG,IAAI,EAAEb;EAAO,CAAC,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMkB,MAAM,GAAIT,OAAO,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMH,OAAO,GAAG,MAAML,aAAa,CAACO,OAAO,CAAC;IAC5CC,QAAQ,CAAC;MAAEG,IAAI,EAAEf,cAAc;MAAEgB,OAAO,EAAEP;IAAQ,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdI,QAAQ,CAAC;MAAEG,IAAI,EAAEd,WAAW;MAAEe,OAAO,EAAER;IAAM,CAAC,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGlB,YAAY;EAAA,IAAEqB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACX,IAAI;IACjB,KAAKjB,aAAa;MAChB,OAAO;QAAE,GAAGwB,KAAK;QAAEhB,KAAK,EAAEoB,MAAM,CAACV,OAAO;QAAET,eAAe,EAAE;MAAK,CAAC;IACnE,KAAKR,UAAU;MACb,OAAO;QAAE,GAAGuB,KAAK;QAAEd,KAAK,EAAEkB,MAAM,CAACV;MAAQ,CAAC;IAC5C,KAAKhB,cAAc;MACjB,OAAO;QAAE,GAAGsB,KAAK;QAAEb,OAAO,EAAE,IAAI;QAAEQ,OAAO,EAAES,MAAM,CAACV;MAAQ,CAAC;IAC7D,KAAKf,WAAW;MACd,OAAO;QAAE,GAAGqB,KAAK;QAAEb,OAAO,EAAE,KAAK;QAAED,KAAK,EAAEkB,MAAM,CAACV;MAAQ,CAAC;IAC5D,KAAKd,MAAM;MACT,OAAO;QAAEO,OAAO,EAAE,IAAI;QAAEF,eAAe,EAAE,KAAK;QAAED,KAAK,EAAE;MAAK,CAAC;IAC/D;MACE,OAAOgB,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}