{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:3002';\nexport const createAccount = async reqBody => {\n  try {\n    const response = await axios.post(`${BASE_URL}/users`, {\n      user: reqBody\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getToken = async reqBody => {\n  try {\n    const response = await axios.post(`${BASE_URL}/users/sign_in`, {\n      user: reqBody\n    });\n    return response.data.token;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","createAccount","reqBody","response","post","user","data","error","Error","getToken","token"],"sources":["/home/juhar/Desktop/microverse-projects/Booking-health-service/src/APIs/user.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3002';\n\nexport const createAccount = async (reqBody) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/users`, { user: reqBody });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getToken = async (reqBody) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/users/sign_in`, {\n      user: reqBody,\n    });\n    return response.data.token;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,QAAO,EAAE;MAAEK,IAAI,EAAEH;IAAQ,CAAC,CAAC;IACzE,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAOP,OAAO,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,gBAAe,EAAE;MAC7DK,IAAI,EAAEH;IACR,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI,CAACI,KAAK;EAC5B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}